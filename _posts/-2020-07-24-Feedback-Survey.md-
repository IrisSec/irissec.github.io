---
layout:      post
title:       "Feedback Survey [misc]"
description: "solved by ???"
---

HAHA I DONT KNOW REGEX THIS IS A MEME

Okay, so you all know that [html can't be parsed by regex](https://stackoverflow.com/a/1732454), right? Let's prove them wrong.

First off, let's find all the script tags since I know that the flag is probably stored in Javascript.

According to [this stackoverflow answer](https://stackoverflow.com/a/33656025), we can use `<[tag][^>]*>(.+?)</[tag]>` to match everything between two tags. Javascript will be in between `<script` and `</script>` for sure, so that's what we'll do. Also, we'll change `.` to `[\s\S]` to match newlines as well.

```
<script[^>]*>([\s\S]+?)<\/script>
```

Now we need to look for that flag. We know that the flag is probably going to be at the end of the form so we have to think about what they would say.

If I were making a form, I would probably say something like "wow much thanks very wow amazing big response [flag here]". So let's search for something saying thanks inside of script tags.

```
(?=<script[^>]*>([\s\S]+?)<\/script>)(?=[\s\S]*(thank).*)
```

We also can't assume the flag format, but we assume that there's some ending character like `}` `]` or `)`. What we want to select now is the whole word where one of those ending characters is attached to.

```
(?=<script[^>]*>([\s\S]+?)<\/script>)(?=[\s\S]*(thank(.*?[}\]\)])).*)
```

Will select anything from the end of thank to one of those ending characters. Now we just need to select the last word before that ending character which should be the flag.

```
(?=<script[^>]*>([\s\S]+?)<\/script>)(?=[\s\S]*(thank(.*\.\s(.*?[}\]\)]))).*)
```

